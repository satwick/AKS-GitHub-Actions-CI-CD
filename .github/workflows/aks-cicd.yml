name: Build and Deploy to AKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: aks-sample-app
  NAMESPACE: ${{ secrets.AKS_NAMESPACE }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push image
        run: |
          docker build -t $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }} .
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:${{ github.sha }}

      - name: Run tests
        run: |
          echo "Run your unit tests here"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: ${{ secrets.AKS_CLUSTER }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}

      - name: Deploy manifests
        run: |
          kubectl apply -f deployment.yml \
                        -f certsdeployment.yml \
                        -f service.yml \
                        -f ingress.yml \
                        -f pdb.yml
          kubectl rollout status deployment/infox-be-${{ env.NAMESPACE }} --namespace $NAMESPACE
