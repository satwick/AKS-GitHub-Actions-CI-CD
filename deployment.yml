apiVersion: apps/v1
kind: Deployment
metadata:
  name: <app-name>-{{ .Values.Target }}
  namespace: {{ .Values.Namespace }}
spec:
  replicas: {{ .Values.Replicas }}
  selector:
    matchLabels:
      app: <app-name>-{{ .Values.Target }}
  template:
    metadata:
      labels: 
        app: <app-name>-{{ .Values.Target }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - <app-name>-{{ .Values.Target }}
            topologyKey: "kubernetes.io/hostname"      
      securityContext:
        runAsUser: 999 
      containers:
        - name: <app-name>-{{ .Values.Target }}
          imagePullPolicy: Always
          securityContext:
            runAsUser: 999
            runAsNonRoot: true
          ports:
            - containerPort: 8000
          {{ if eq .Values.Environment "prod" }}
          image: <acr-repo-name>/<app-name>:latest-prod
          {{ else }}
          image: <acr-repo-name>/<app-name>:latest-{{ .Values.Environment }}
          {{ end }}
          livenessProbe:
           httpGet:
            path: /api/WeatherForecast # health check endpoint
            port: 8000
           periodSeconds: 30
           timeoutSeconds: 5
           failureThreshold: 3
          readinessProbe:
           httpGet:
            path: /api/WeatherForecast # readiness endpoint
            port: 8000
           periodSeconds: 10
           timeoutSeconds: 2
           failureThreshold: 3
          volumeMounts:
#           - name: ca-pemstore
#             mountPath: /etc/ssl/certs/Corp-Issuing-CA01-G2.pem
#             subPath: Corp-Issuing-CA01-G2.pem
#             readOnly: false
#           - name: ca-pemstore2
#             mountPath: /etc/ssl/certs/aevopppjscs_bus_corpintra_net.pem
#             subPath: aevopppjscs_bus_corpintra_net.pem
#             readOnly: false
#           - name: ca-pemstore3
#             mountPath: /etc/ssl/certs/Corp-Root-CA-G2.pem
#             subPath: Corp-Root-CA-G2.pem
#             readOnly: false
          - name: tz-utc
            mountPath: /etc/localtime
          resources:
          {{- if .Values.resreserv.enabled }}
            requests:
              memory : {{ .Values.resources.requests.memory }}
              cpu : {{ .Values.resources.requests.cpu }}
            limits:
              memory : {{ .Values.resources.limits.memory }}
              cpu : {{ .Values.resources.limits.cpu }}
          {{- end }}          
        
          env:
          - name: INFOX_LOCALE
            valueFrom:
               configMapKeyRef:
                 name: infox-locale-{{ .Values.Target }}
                 key: infox_locale
          - name: INFOX_ENV
            valueFrom:
               configMapKeyRef:
                 name: infox-env-{{ .Values.Environment }}
                 key: infox_env    

      volumes:
#         - name: ca-pemstore
#           configMap:
#             name: ca-pemstore
#         - name: ca-pemstore2
#           configMap:
#             name: ca-pemstore2
#         - name: ca-pemstore3
#           configMap:
#             name: ca-pemstore3
        - name: tz-utc
          hostPath:
            path: /usr/share/zoneinfo/UTC
      hostAliases:
       - ip: 
         hostnames:
         - edcs3dflintb.s3-edc.emea.svc.corpintra.net 
       - ip: 
         hostnames:
         - mailhost.cn.bg.corpintra.net 
      #hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet        
      imagePullSecrets:
        - name: acrcred
